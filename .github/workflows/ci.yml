name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  tflint-checks:
    runs-on: ubuntu-latest
    steps:
      
      - name: Check out Git Repository
        uses: actions/checkout@v4

      # TFLint - Terraform Check
      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

      # Print TFLint version
      - name: Show version
        run: tflint --version

      # Install plugins
      - name: Init TFLint
        run: tflint --init

      # Run TFLint command in each directory recursively
      - name: Run TFLint
        run: tflint -f compact --recursive --force

  tfsec-checks:
    runs-on: ubuntu-latest
    needs: tflint-checks
    steps:
      - name: Check out Git Repository
        uses: actions/checkout@v2

      # Tfsec - Security scanner for your Terraform code
      - name: Run Tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

  terraform-checks:
    runs-on: ubuntu-latest
    needs: tflint-checks
    steps:
      - name: Check out Git Repository
        uses: actions/checkout@v4

      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7 

      
      - name: Terraform Init
        run: terraform init

      
      - name: Run Terraform Fmt
        run: terraform fmt -check

      
      - name: Run Terraform Validate
        run: terraform validate
   
  terraform-plan:

    runs-on: ubuntu-latest
    needs: terraform-checks
    environment: production
    steps:
      - name: Check out Git Repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
        run: echo "AWS credentials configured"

      - name: Terraform Init
        run: terraform init

      - name: Run Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
        run: terraform plan  --var project="My-Project" --var desired_az_count=3
  release:
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Release to GitHub
        uses: cycjimmy/semantic-release-action@v2.5.4
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@5.0.1
            @semantic-release/git
          branches: |
            ['main']
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
